info:
    description: "TopicRestBuilder REST API"
    license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
    title: "TopicRestBuilder"
    version: v1.0
openapi: 3.0.1

components:
    schemas:
        Error:
            type: "object"
            properties:
                status:
                    type: "string"
                    description: "HTTP status code"
                message:
                    type: "string"
                    description: "Error message"
            required:
                - "status"
                - "message"
        AttachmentUpdate:
            type: "object"
            properties:
                fileName:
                    type: "string"
                    description: "Name of the file"
                fileBase64:
                    type: "string"
                    format: "byte"
                    description: "Base64 encoded file content"
                mimeType:
                    type: "string"
                    description: "MIME type of the file"
            required:
                - "fileName"
                - "fileBase64"
                - "mimeType"
        Topic:
            type: "object"
            description: "Topic object"
            properties:
                id:
                    type: "integer"
                    format: "int64"
                    description: "Topic ID"
                topicTitle:
                    type: "string"
                    description: "Topic title from picklist"
                topicSubtitle:
                    type: "string"
                    description: "Topic subtitle"
                topicDescription:
                    type: "string"
                    description: "Topic description"
                topicStatus:
                    type: "string"
                    description: "Topic status from picklist"
                topicAttachments:
                    type: "array"
                    description: "Array of attachments for topic"
                    items:
                        type: "object"
                        properties:
                            attachmentId:
                                type: "integer"
                                format: "int64"
                                description: "Attachment ID"
                            fileName:
                                    type: "string"
                                    description: "Name of the file"
                            fileBase64:
                                    type: "string"
                                    format: "byte"
                                    description: "Base64 encoded file content"
                            mimeType:
                                    type: "string"
                                    description: "MIME type of the file"
                        required:
                                - "fileName"
                                - "fileBase64"
                                - "mimeType"
                numberOfMeetings:
                    type: "integer"
                    description: "Number of meetings this topic is included in"
                meetingDates:
                        type: "array"
                        description: "Dates of meetings this topic is included in"
                        items:
                            type: "string"
                            format: "date-time"
            required:
                - "topicTitle"
                - "topicSubtitle"
                - "topicDescription"
        Meeting:
            type: "object"
            description: "Meeting object"
            properties:
                id:
                    type: "integer"
                    format: "int64"
                    description: "Meeting ID"
                meetingTitle:
                    type: "string"
                    description: "Meeting title"
                meetingNumber:
                    type: "integer"
                    format: "int64"
                    description: "Meeting number"
                meetingDateTime:
                    type: "string"
                    format: "date-time"
                    description: "Meeting date and time"
                meetingLocation:
                    type: "string"
                    description: "Meeting location"
                meetingLink:
                    type: "string"
                    description: "Meeting link"
                participants:
                    type: "array"
                    items:
                        type: "integer"
                        format: "int64"
                    description: "Array of participant user IDs"
                topics:
                    type: "array"
                    items:
                        type: "integer"
                        format: "int64"
                    description: "Array of topics or topic IDs"
            required:
                - "meetingTitle"
                - "meetingNumber"
                - "meetingDateTime"

        MeetingResponse:
            type: "object"
            description: "Meeting response object"
            properties:
                id:
                    type: "integer"
                    format: "int64"
                    description: "Meeting ID"
                meetingTitle:
                    type: "string"
                    description: "Meeting title"
                meetingNumber:
                    type: "integer"
                    format: "int64"
                    description: "Meeting number"
                meetingDateTime:
                    type: "string"
                    format: "date-time"
                    description: "Meeting date and time"
                meetingLocation:
                    type: "string"
                    description: "Meeting location"
                meetingLink:
                    type: "string"
                    description: "Meeting link"
                participants:
                    type: "array"
                    items:
                        type: "integer"
                        format: "int64"
                    description: "Array of participant user IDs"
                topics:
                    type: "array"
                    items:
                        $ref: "#/components/schemas/Topic"
                    description: "Array of full topic details"
        WorkflowActivity:
            type: "object"
            properties:
                logId:
                    type: "integer"
                    format: "int64"
                    description: "ID of the workflow log"
                userId:
                    type: "integer"
                    format: "int64"
                    description: "ID of the user who performed the action"
                userName:
                    type: "string"
                    description: "Full name of the user who performed the action"
                createDate:
                    type: "string"
                    format: "date-time"
                    description: "When the action was performed"
                activityType:
                    type: "string"
                    description: "Type of workflow activity (NODE_ENTRY, TASK_ASSIGNMENT, etc.)"
                comment:
                    type: "string"
                    description: "Comment provided during the workflow activity"
                previousNode:
                    type: "string"
                    description: "Name of the previous workflow node"
                currentNode:
                    type: "string"
                    description: "Name of the current workflow node"
                taskId:
                    type: "integer"
                    format: "int64"
                    description: "ID of the workflow task (if applicable)"
                isTerminal:
                    type: "boolean"
                    description: "Whether this is a terminal node in the workflow"


paths:
    "/topics":
        get:
            tags: ["Topic"]
            summary: "Get all topics"
            operationId: "getTopics"
            parameters:
                - name: "search"
                  in: "query"
                  required: false
                  schema:
                      type: "string"
                  description: "Search keywords for filtering topics"

                - name: "filterStr"
                  in: "query"
                  required: false
                  schema:
                      type: "string"
                  description: "Filter expression for topics"

                - name: "page"
                  in: "query"
                  required: false
                  schema:
                      type: "integer"
                      format: "int32"
                  description: "Page number for pagination"

                - name: "pageSize"
                  in: "query"
                  required: false
                  schema:
                      type: "integer"
                      format: "int32"
                  description: "Number of items per page"

                - name: "sort"
                  in: "query"
                  required: false
                  schema:
                      type: "array"
                      items:
                          type: "string"
                  description: "Sort fields (e.g., 'field:asc' or 'field:desc')"
                  style: "form"
                  explode: true
            responses:
                200:
                    description: "List of topics retrieved successfully"
                    content:
                        application/json:
                            schema:
                                type: "array"
                                items:
                                    $ref: "#/components/schemas/Topic"
                        application/xml:
                            schema:
                                type: "array"
                                items:
                                    $ref: "#/components/schemas/Topic"
                400:
                    description: "Bad request"
                500:
                    description: "Internal server error"
        post:
            tags: [ "Topic" ]
            summary: "Create a new topic"
            operationId: "createTopic"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Topic"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Topic"
            responses:
                201:
                    description: "Topic created successfully"
                    content:
                        application/json:
                            schema:
                                oneOf:
                                  - $ref: "#/components/schemas/Topic"
                                  - $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                oneOf:
                                  - $ref: "#/components/schemas/Topic"
                                  - $ref: "#/components/schemas/Error"
                400:
                    description: "Bad request"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Error"
                500:
                    description: "Internal server error"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Error"

    "/topics/{topicId}":
        get:
            tags: [ "Topic" ]
            summary: "Get a specific topic by ID"
            operationId: "getTopicById"
            parameters:
                - name: "topicId"
                  in: "path"
                  required: true
                  schema:
                      type: "integer"
                      format: "int64"
            description: "ID of the topic"
            responses:
                    200:
                        description: "Topic retrieved successfully"
                        content:
                            application/json:
                                schema:
                                    type: "object"
                                    properties:
                                        status:
                                            type: "string"
                                            description: "Response status"
                                        data:
                                            $ref: "#/components/schemas/Topic"
                                        message:
                                            type: "string"
                                            description: "Additional message about the response"
                            application/xml:
                                schema:
                                    type: "object"
                                    properties:
                                        status:
                                            type: "string"
                                            description: "Response status"
                                        data:
                                            $ref: "#/components/schemas/Topic"
                                        message:
                                            type: "string"
                                            description: "Additional message about the response"
                    404:
                        description: "Topic not found"
                        content:
                            application/json:
                                schema:
                                    type: "object"
                                    properties:
                                        status:
                                            type: "string"
                                        message:
                                            type: "string"
                            application/xml:
                                schema:
                                    type: "object"
                                    properties:
                                        status:
                                            type: "string"
                                        message:
                                            type: "string"
                    500:
                        description: "Internal server error"
                        content:
                            application/json:
                                schema:
                                    type: "object"
                                    properties:
                                        status:
                                            type: "string"
                                        message:
                                            type: "string"
                            application/xml:
                                schema:
                                    type: "object"
                                    properties:
                                        status:
                                            type: "string"
                                        message:
                                            type: "string"
        put:
            tags: [ "Topic" ]
            summary: "Update a specific topic"
            operationId: "updateTopic"
            parameters:
                - name: "topicId"
                  in: "path"
                  required: true
                  schema:
                      type: "integer"
                      format: "int64"
                  description: "ID of the topic"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Topic"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Topic"

            responses:
                200:
                    description: "Topic updated successfully"
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/Topic"
                                    - $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/Topic"
                                    - $ref: "#/components/schemas/Error"
                400:
                    description: "Bad request"
                404:
                    description: "Topic not found"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Error"
                500:
                    description: "Internal server error"
        delete:
            tags: [ "Topic" ]
            summary: "Delete a specific topic"
            operationId: "deleteTopic"
            parameters:
                - name: "topicId"
                  in: "path"
                  required: true
                  schema:
                      type: "integer"
                      format: "int64"
            description: "ID of the topic"
            responses:
                204:
                    description: "Topic deleted successfully"
                404:
                    description: "Topic not found"
                500:
                    description: "Internal server error"
    "/topics/{topicStatus}/status":
        get:
            tags: [ "Topic" ]
            summary: "Get Topics by status"
            operationId: "getTopicsByStatus"
            parameters:
                - name: "topicStatus"
                  in: "path"
                  required: true
                  schema:
                      type: "string"
            responses:
                200:
                    description: "List of reviewed topics retrieved successfully"
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Topic"
                                type: "array"
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Topic"
                                type: "array"
                400:
                    description: "Bad request"
                500:
                    description: "Internal server error"

    "/topics/{topicId}/workflow-logs":
        get:
            tags: [ "Topic" ]
            summary: "Get workflow history for a topic"
            operationId: "getTopicWorkflowLogs"
            parameters:
                - name: "topicId"
                  in: "path"
                  required: true
                  schema:
                      type: "integer"
                      format: "int64"
                  description: "ID of the topic"
            responses:
                200:
                    description: "Workflow history retrieved successfully"
                    content:
                        application/json:
                            schema:
                                type: "array"
                                items:
                                    $ref: "#/components/schemas/WorkflowActivity"
                        application/xml:
                                schema:
                                    type: "array"
                                    items:
                                        $ref: "#/components/schemas/WorkflowActivity"
                404:
                    description: "Topic not found"
                    content:
                        application/json:
                                schema:
                                    $ref: "#/components/schemas/Error"
                        application/xml:
                                schema:
                                    $ref: "#/components/schemas/Error"
                500:
                    description: "Internal server error"
                    content:
                        application/json:
                                schema:
                                    $ref: "#/components/schemas/Error"
                        application/xml:
                                schema:
                                    $ref: "#/components/schemas/Error"


    "/meetings":
        post:
            tags: [ "Meeting" ]
            summary: "Create a new meeting"
            operationId: "createMeeting"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Meeting"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Meeting"

            responses:
                201:
                    description: "Meeting created successfully"
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/MeetingResponse"
                                    - $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/MeetingResponse"
                                    - $ref: "#/components/schemas/Error"

                400:
                    description: "Bad request"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Error"
                500:
                    description: "Internal server error"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Error"
        get:
            tags: [ "Meeting" ]
            summary: "Get all meetings"
            operationId: "getMeetings"
            parameters:
                - name: "search"
                  in: "query"
                  required: false
                  schema:
                      type: "string"
                  description: "Search keywords for filtering meetings"

                - name: "filter"
                  in:   "query"
                  required: false
                  schema:
                      type: "string"
                  description: "filter expression for topics"

                - name: "page"
                  in: "query"
                  required: false
                  schema:
                      type: "integer"
                      format: "int32"
                  description: "Page number for pagination"
                - name: "pageSize"
                  in: "query"
                  required: false
                  schema:
                      type: "integer"
                      format: "int32"
                  description: "Number of items per page"
                - name: "sort"
                  in: "query"
                  required: false
                  schema:
                      type: "array"
                      items:
                          type: "string"
                  description: "Sort fields (e.g., 'field:asc' or 'field:desc')"
            responses:
                200:
                    description: "List of meetings retrieved successfully"
                    content:
                        application/json:
                            schema:
                                type: "array"
                                items:
                                    $ref: "#/components/schemas/MeetingResponse"
                        application/xml:
                            schema:
                                type: "array"
                                items:
                                    $ref: "#/components/schemas/MeetingResponse"
                400:
                    description: "Bad request"
                500:
                    description: "Internal server error"

    "/meetings/{meetingId}":
            get:
                tags: [ "Meeting" ]
                summary: "Get a meeting by ID"
                operationId: "getMeetingById"
                parameters:
                    - name: "meetingId"
                      in: "path"
                      required: true
                      schema:
                          type: "integer"
                          format: "int64"
                      description: "ID of the meeting to retrieve"
                responses:
                    200:
                        description: "Meeting retrieved successfully"
                        content:
                            application/json:
                                schema:
                                    oneOf:
                                       - $ref: "#/components/schemas/MeetingResponse"
                                       - $ref: "#/components/schemas/Error"
                            application/xml:
                                schema:
                                    oneOf:
                                       - $ref: "#/components/schemas/MeetingResponse"
                                       - $ref: "#/components/schemas/Error"
                    404:
                        description: "Meeting not found"
                        content:
                            application/json:
                                schema:
                                    $ref: "#/components/schemas/Error"
                            application/xml:
                                schema:
                                    $ref: "#/components/schemas/Error"
                    500:
                        description: "Internal server error"

            delete:
                tags: [ "Meeting" ]
                summary: "Delete a meeting"
                operationId: "deleteMeeting"
                parameters:
                    - name: "meetingId"
                      in: "path"
                      required: true
                      schema:
                          type: "integer"
                          format: "int64"
                      description: "ID of the meeting to delete"
                responses:
                    204:
                        description: "Meeting deleted successfully"
                    404:
                        description: "Meeting not found"
                    500:
                        description: "Internal server error"

            put:
                tags: [ "Meeting" ]
                summary: "Update a meeting"
                operationId: "updateMeeting"
                parameters:
                    - name: "meetingId"
                      in: "path"
                      required: true
                      schema:
                          type: "integer"
                          format: "int64"
                      description: "ID of the meeting to update"
                requestBody:
                    required: true
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Meeting"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Meeting"
                responses:
                    200:
                        description: "Meeting updated successfully"
                        content:
                            application/json:
                                schema:
                                    oneOf:
                                       - $ref: "#/components/schemas/MeetingResponse"
                                       - $ref: "#/components/schemas/Error"
                            application/xml:
                                schema:
                                    oneOf:
                                       - $ref: "#/components/schemas/MeetingResponse"
                                       - $ref: "#/components/schemas/Error"
                    404:
                        description: "Meeting not found"
                        content:
                            application/json:
                                schema:
                                    $ref: "#/components/schemas/Error"
                            application/xml:
                                schema:
                                    $ref: "#/components/schemas/Error"
                    500:
                        description: "Internal server error"

    "/meetings/{meetingId}/participants":
        get:
            tags: [ "Meeting" ]
            summary: "Get participants of a meeting"
            operationId: "getMeetingParticipants"
            parameters:
                - name: "meetingId"
                  in: "path"
                  required: true
                  schema:
                      type: "integer"
                      format: "int64"
                  description: "ID of the meeting"
            responses:
                200:
                    description: "List of participants retrieved successfully"
                    content:
                        application/json:
                            schema:
                                type: "array"
                                items:
                                    type: "integer"
                                    format: "int64"
                        application/xml:
                            schema:
                                type: "array"
                                items:
                                    type: "integer"
                                    format: "int64"
                404:
                    description: "Meeting not found"
                500:
                    description: "Internal server error"

    "/attachments/{attachmentId}":
        delete:
            tags: [ "Attachment" ]
            summary: "Delete a specific attachment"
            operationId: "deleteAttachment"
            parameters:
                - name: "attachmentId"
                  in: "path"
                  required: true
                  schema:
                      type: "integer"
                      format: "int64"
                  description: "ID of the attachment to delete"
            responses:
                204:
                    description: "Attachment deleted successfully"
                404:
                    description: "Attachment not found"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Error"
                500:
                    description: "Internal server error"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Error"
        put:
            tags: [ "Attachment" ]
            summary: "Update a specific attachment"
            operationId: "updateAttachment"
            parameters:
                - name: "attachmentId"
                  in: "path"
                  required: true
                  schema:
                      type: "integer"
                      format: "int64"
                  description: "ID of the attachment to update"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AttachmentUpdate"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/AttachmentUpdate"
            responses:
                200:
                    description: "Attachment updated successfully"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    attachmentId:
                                        type: "integer"
                                        format: "int64"
                                    fileName:
                                        type: "string"
                                    fileBase64:
                                        type: "string"
                                        format: "byte"
                                    mimeType:
                                        type: "string"
                        application/xml:
                            schema:
                                type: "object"
                                properties:
                                    attachmentId:
                                        type: "integer"
                                        format: "int64"
                                    fileName:
                                        type: "string"
                                    fileBase64:
                                        type: "string"
                                        format: "byte"
                                    mimeType:
                                        type: "string"
                400:
                    description: "Bad request"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Error"
                404:
                    description: "Attachment not found"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Error"
                500:
                    description: "Internal server error"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Error"
